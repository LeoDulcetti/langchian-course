# Pydantic is a python library for data validation and settings management using python type annotations.
# It is used by langchain to define the schema of the tools. It gives messages when data is invalid.

from typing import List 
from pydantic import BaseModel, Field

class Source(BaseModel):
    """Schema for a source used by the agent"""
    url: str = Field(..., description="The URL of the source")


class AgentResponse(BaseModel):
    """Schema for the agent response"""
    answer: str = Field(description="The final answer generated by the agent")
    sources: List[Source] = Field(default_factory=list, description="List of sources used to generate the answer") #default_factory is used to create a new list for each instance of the class.
# In this case the source is a list of Source objects defined above.

